// //まとめ
// この章では条件分岐について学びました。

// if文、else if文、else文で条件分岐した処理を扱える
// 条件式に指定した値は真偽値へと変換してから判定される
// 真偽値に変換するとfalseとなる値をfalsyと呼ぶ
// switch文とcase節、default節を組み合わせて条件分岐した処理を扱える
// case節でbreak文を省略した場合は、後ろに続くcase節が実行される
// 条件分岐にはif文やswitch文を利用します。 複雑な条件を定義する場合には、if文のネストが深くなりやすいです。 そのような場合には、条件式自体を見直してよりシンプルな条件にできないかを考えてみることも重要です。

// 真偽値に変換するとfalseとなる値をfalsyと呼ぶ
// -> 最近の言語では、0や空文字列、null、undefined、NaNなどの値はfalsyとなる
// -> それ以外の値はtruthyとなる

// ESLintの注釈でfalsyのエラーが出ていたので参考になった。

if (false) {
    // この行は実行されません
}
if ("") {
    // この行は実行されません
}
if (0) {
    // この行は実行されません
}
if (undefined) {
    // この行は実行されません
}
if (null) {
    // この行は実行されません
}

// この””は空文字列のことで、””はfalsyとなる。
// → これエラー注釈になっていたので、デストラクチャリングを使ったのを思い出した。
//(僕の１００倍ほど賢いよね。感動です。)
const person = { name: 'Alice', age: 25, city: 'Tokyo' };

const { name, age } = person;

console.log(name); // Alice
console.log(age); // 25
